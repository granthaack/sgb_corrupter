The Super Nut Boy™ Corrupter

“Yahaha! You found me!”
	-Nut Boy























WARNING: There are no jokes in this manual.
General Usage
Getting to Know the Super Nut Boy
The Control Console
The control console is the green box with all the dials and buttons on it. It requires a USB cable for power.
The Cartridge
The cartridge must be plugged into the control console via the VGA cable in order to operate. The protective acrylic case on the cartridge is mainly for shipping and can be removed if need be.
Booting Up
To turn on the corrupter, follow these instructions in this order:
1. Plug the USB cable into the control console
2. Plug the VGA cable into the control console and the cartridge
3. Make sure the CPU Speed dial is set to Normal Speed
4. Make sure all the other dials are turned off (turned fully counter clockwise)
5. Activate the Master Switch on the corrupter
6. Activate the Cart Switch on the corrupter
7. Switch on the Super Nintendo
8. Play gaem
Using the Corrupter
The Master Switch
This controls power to the corrupter. It does not control power to the SNES. If this is shut off, the Game Boy Game in the cart will not play.

The Cart Switch
This allows you to swap games in the Super Game Boy without rebooting the Super Nintendo. Simply flip the switch off, swap the game, and flip the switch back on. You can also use this to reset a game if it crashes. This was added so you can draw a custom border for the Super Game Boy and it will persist between games. To edit the border, press L and R on the SNES controller at the same time once a game is running.

The CPU Speed Dial
This adjusts how fast the game goes.

The VRAM Address and VRAM Data Dials
This adjusts the corruption of the Video Ram.

The WRAM Address and WRAM Data Buttons
This sends a signal to corrupt the Work Ram.

The Cart Address and Cart Data Buttons
This sends a signal to corrupt the data coming from the cartridge.

Reading the LED Display on the Corrupter
First Line of LEDs: This displays the current lines being corrupted on the VRAM address bus. Note that some LEDs do not light up, this is by design. If those lines are corrupted it leads to unstable corruptions.
Second Line of LEDs: This displays the current lines being corrupted on the VRAM data bus. Note that some LEDs do not light up, this is by design. If those lines are corrupted it leads to unstable corruptions.
Third Line of LEDs: This corresponds to the WRAM Data, WRAM Address, Cart Data, and Cart address lines in that order.
Tips and Tricks
The CPU Speed Dial
The slower the game is going, the more stable it is. Slowing it down a lot will give you better control over the corruptions

The VRAM Dials
Messing with these is extraordinarily unlikely to crash the game, so go nuts. Sometimes corruptions will persist even when the dials are fully turned off.

The WRAM Buttons
When held down, these will corrupt the WRAM address bus or WRAM data bus every 15 milliseconds. Holding it down for too long will probably cause a crash, so quick taps are better. Messing with WRAM can cause some great corruptions when the game is performing some kind of action, for example, moving an enemy, increasing the score, etc. If nothing is happening on screen, it is less likely to generate an interesting corruption. Note that corrupting the WRAM could likely lead to a crash.

The Cart Buttons
Just like the WRAM Buttons, holding these down will corrupt the cartridge address bus or the cartridge data bus every 15 milliseconds. Corrupting the cartridge tends to have the best result when the game is loading something from the cartridge, like a new level or game mode. If nothing is being loaded from the cartridge, this is less likely to cause an interesting corruption. Note that corrupting the cartridge lines could likely lead to a crash.
Troubleshooting
1. Reset the Cart Switch
2. Reset the Master Switch
3. Make sure the VGA cable is fully plugged in on both ends. After making sure, reboot the control console.
4. If any further problems occur, perform a full shutdown of the device. Unplug everything and replug via the booting up procedure above
5. As a last ditch effort, locate the loose wires underneath the cartridge. They should be taped to the bottom. Strip the heat shrink tubing off of the black and dark blue wires to expose the metal ends. Touch those two ends together. This will force a reboot on the Arduino. Note that this must be performed while the cartridge is plugged into the control console and the control console is powered on.
6. For any further problems please call 1-800-255-3700
General Safety Info
Don’t leave the corrupter plugged in unattended. It’s still a hand built prototype and could be subject to failures if left plugged in for very long periods of time. Make sure it’s unplugged when left unattended.

The corrupter will probably ruin your save files on your games, so don’t use it on your childhood copy of Pokemon with Mew on it.

Advanced Technical Documents
The information in this section is not required to operate the corrupter. However, understanding how the device works might lead to better corruptions. Feel free to skip all of this if you want.
Bits and Bytes inside the Super Game Boy
The Super Game Boy has a bunch of wires inside of it that transmit data to and from each of the different elements, like video RAM, work RAM, the cartridge, the CPU, etc. This data is sent on something called a “bus”. These busses are really just groups of wires that transmit data. 

For example, the Work RAM Address Bus is a collection of 12 wires that tell the Work RAM to get some data at a certain RAM address. Each of these wires can send one bit (a zero or a one) at a time. If the CPU wants to tell the Work RAM, “give me the data at address 101001010011”, it sends the data over the wires like this:



The other busses send data the same way. We’ll go over what kind of data the busses transmit in a second.
How the Corrupter Works

The corrupter does its corrupting by altering the data being sent and received over the various busses. The way that it does this is by forcing some of the lines in the bus to read a 0 no matter what. This changes the data that the Super Game Boy is trying to send and corrupts the game.

For example, let’s use the diagram above and say that the CPU is trying to send 101001010011 over the Work RAM address bus. This will cause the Work RAM to send whatever data is located at the address 101001010011. However, if we activate the corrupter and force the first line to transmit a 0 instead of a 1, the Work RAM will send the wrong data back to the CPU. More specifically, it will send whatever is at 101001010010. The game is then corrupted.


Corrupter Design
The corrupter alters the video RAM address bus, the video RAM data bus, the cartridge address bus, the cartridge data bus, the work RAM address bus, and the work RAM data bus. 
Video RAM Data Bus and Video RAM Address Bus
The corrupter has access to the first 7 lines of these busses. Corrupting this portion of memory is pretty stable and has never caused me a crash. It produces strange visual disturbances that can persist even when the corruption is disabled.
Work RAM Data Bus and Work RAM Address Bus
The corrupter has access to the only the first line of these busses. I experimented with corrupting more lines but it just led to consistent crashing. Messing with this portion of the corrupter is risky, but it can yield random and hilarious corruptions.
Cartridge Data Bus and Work Ram Address Bus
The corrupter has access only to the first line of these busses. Like the Work RAM busses, these are volatile and cause crashing when messed with too much. They also don’t do anything if the game is not loading something from the cartridge. It depends on each game, but as far as I know these busses aren’t very active if the game isn’t loading something like a new level or save from the cartridge
